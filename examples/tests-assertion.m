function IsSymmetricImproved(M : prec := 0)
/* To avoid stupid behavior of IsSymmetric */
if prec eq 0 then
    CC := BaseRing(M); prec := Precision(CC) - 7;
end if;
CCSmall := ComplexField(prec);
vprint CurveRec : Max([ Abs(c) : c in Eltseq(M - Transpose(M)) ]);
return Max([ Abs(c) : c in Eltseq(M - Transpose(M)) ]) lt 10^(-prec);
return IsSymmetric(ChangeRing(M, CCSmall));
end function;

function IsPositiveDefiniteImproved(M : prec := 0);
/* To avoid stupid behavior of IsPositiveDefinite */
if prec eq 0 then
    RR := BaseRing(M); prec := Precision(RR) - 7;
end if;
RRSmall := RealField(prec);
return IsPositiveDefinite(ChangeRing(M, RRSmall));
end function;


function IsSmallPeriodMatrix(tau)
Imtau := Matrix([ [ Im(c) : c in Eltseq(row) ] : row in Rows(tau) ]);
return IsSymmetricImproved(tau) and IsPositiveDefiniteImproved(Imtau);
end function;


function LeftActionHg(M, tau);
assert IsSmallPeriodMatrix(tau);
A := Submatrix(M, 1,1, 3,3); B := Submatrix(M, 1,4, 3,3);
C := Submatrix(M, 4,1, 3,3); D := Submatrix(M, 4,4, 3,3);
return (A*tau + B)*((C*tau + D)^(-1));
end function;


function LLLReduceMatrix(tau);
assert IsSmallPeriodMatrix(tau);
tau[2,1] := tau[1,2]; tau[3,1] := tau[1,3]; tau[3,2] := tau[2,3];
Imtau := Matrix([ [ Im(c) : c in Eltseq(row) ] : row in Rows(tau) ]);
_, T := LLLGram(Imtau);
return T*tau*Transpose(T);
end function;


function IntegerReduceMatrix(tau);
return Matrix([ [ c - Round(Re(c)) : c in Eltseq(row) ] : row in Rows(tau) ]);
end function;


function ReduceSmallPeriodMatrix(tau)
N0 := Matrix(Integers(), [
[  0,  0,  0, -1,  0,  0],
[  0,  1,  0,  0,  0,  0],
[  0,  0,  1,  0,  0,  0],
[  1,  0,  0,  0,  0,  0],
[  0,  0,  0,  0,  1,  0],
[  0,  0,  0,  0,  0,  1]
]);
while true do
    tau := LLLReduceMatrix(tau);
    tau := IntegerReduceMatrix(tau);
    if Abs(tau[1,1]) gt 0.99 then
        return tau;
    end if;
    tau := LeftActionHg(N0, tau);
end while;
end function;


prec := 200;
SetDefaultRealFieldPrecision(prec);
CC := ComplexFieldExtra(prec);

M := Matrix(CC, [
[1.3502573756671111555293158996236089952549789549409754980391670966359382869888128759095055877299039839167826040624025323405002735071276294081878563814248557740272819523805200874578932997392726002348556 + 2.4713207697329700163757969244301630793952877546811904848809747613220201568447776167959078253033014181585136281811326501640511415646984708809275551214573073496236337155637432453081615544249613601179088*CC.1, 0.40394065770482769537904273081598918507376191749158161722087980719302817353644558415488901980025010261977447383013700702867052671821934337042884849748330050928378214929997500796449209785301446157443023 + 0.47074832325754956450181708566434564323957896126263629720689528048256645962587214066327208631524133523212780120201820835409538189387756465513192894605837457202442450417606028563619257189650719395230908*CC.1, 0.66516785992218462802973145408459499240576310885935563153791118739287379101726914499127363388050206101400297094465255725448489859275749868426930801963568009797552866591479085458058626676460465272926370 + 1.3964709680767703054862865440903828506164079807017097357954868238045675508992930294278779416892078797687643848675053025779338527291611773990767717396850898563862155456667713281680103718335669450306245*CC.1], [0.40394065770482769537904273081598918507376191749158161722087980719302817353644558415488901980025010261977447383013700702867052671821934337042884849748330050928378214929997500796449209785301446157443020 + 0.47074832325754956450181708566434564323957896126263629720689528048256645962587214066327208631524133523212780120201820835409538189387756465513192894605837457202442450417606028563619257189650719395230907*CC.1, -1.0931396110671325928361840825980837108329634691994427992387293727048565350629563781676315743498403110574562690562902365858575430099547142419310742696327294592023514737982875823320115902201942589147996 + 0.20692694868809358119708859436938242801846932908243793794403662546397926631079036005231750289947030931882455035025667930979875340048178119925894032864789492232642738628419518039122743909756274999514878*CC.1, -0.74657349307637255206442711903536209311032278315360546544148911433036246673648273233164648352544910699328848510020724817592995859661963890265857960040895767078474228504127546754564971060741484240611775 + 0.31498915026161793367775606432500602641478805123485361329015019140045001291633757276851534983296057913158704753915467841488601886878055019900092239567974899413983140506208294339838999876631569826542267*CC.1], [0.66516785992218462802973145408459499240576310885935563153791118739287379101726914499127363388050206101400297094465255725448489859275749868426930801963568009797552866591479085458058626676460465272926370 + 1.3964709680767703054862865440903828506164079807017097357954868238045675508992930294278779416892078797687643848675053025779338527291611773990767717396850898563862155456667713281680103718335669450306245*CC.1, -0.74657349307637255206442711903536209311032278315360546544148911433036246673648273233164648352544910699328848510020724817592995859661963890265857960040895767078474228504127546754564971060741484240611772 + 0.31498915026161793367775606432500602641478805123485361329015019140045001291633757276851534983296057913158704753915467841488601886878055019900092239567974899413983140506208294339838999876631569826542267*CC.1, -0.38048026425864447221479049056372104883974129374532004322837537016052462221275332062364537715870630459033539912554571756130295555362333728684968685287064047319392251892237502306559978937546434523914746 + 0.90649016982168908004234964532537151820561518069712760520106038424174710982015775211475536941865556650540486214799962075059185142154288981257352237884145117842562021575706291014023279337622696510762909*CC.1]
]);

print "";
print "Reduced small period matrix:";
print ReduceSmallPeriodMatrix(M);

M := Matrix(CC, [
[-2.0689644168819528885282139976923294559744183587034258173576993571466790183389334136151040249456709749403164821112654436058068701228237104494884472187884135859229273664495401278034493108506568096600770 + 1.8887501323359355898871912976727617918557261434227931872898434492413540842273438700680409985069509939855030765280315029641370882944833441048044928421991383532907387699946192889526312548356587794559051*CC.1, 1.0755093768572475958082822686959476542477729279767131428874877272207785143507078347866074907825784763522019065519471410684537088533030669952878566002125005928020842771020066676666008705805538025236898 - 0.89568190032626386008631589785535219937985627424072582630973140918634308041664439536950926414449634994785308912006980373077455472699785662601787549477948550082968688153456865628478023513769417508148662*CC.1, 0.91794566316745769691164946030043414747887250274999953158272390270512198963751774404188904338051402223591266900737116146889945241621757645891273401836341240031875881224552679247024756968954920461269754 - 1.0061423816550664936560304119644536138317686644764859382758686741878899769977395957916036432575864368371559515999646370617223594223215845282497548002040689986585135013866159999466049378821343390741339*CC.1], [1.0755093768572475958082822686959476542477729279767131428874877272207785143507078347866074907825784763522019065519471410684537088533030669952878566002125005928020842771020066676666008705805538025236898 - 0.89568190032626386008631589785535219937985627424072582630973140918634308041664439536950926414449634994785308912006980373077455472699785662601787549477948550082968688153456865628478023513769417508148663*CC.1, -0.50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005 + 0.72858938389899837926876028407161311693594813972256020117083129170456775257541434596927289000285708939581197270160655787491232771816901117509226035852791482551942301912609750129882829931903934384267315*CC.1, -4.8990756623634763950542206476802844538483218598157986028625174054293664201696248462963411770739507761058790853231830666965261303486663057707486615985465304119450827346082172088262698175589755188348789E-200 + 0.33418503285453096163511122756747816488781626903633125027780023496355065568246009880047274828327852110408223283692649171172445401765769090185123027250314135062052772481694230997190387163730966247762696*CC.1], [0.91794566316745769691164946030043414747887250274999953158272390270512198963751774404188904338051402223591266900737116146889945241621757645891273401836341240031875881224552679247024756968954920461269748 - 1.0061423816550664936560304119644536138317686644764859382758686741878899769977395957916036432575864368371559515999646370617223594223215845282497548002040689986585135013866159999466049378821343390741339*CC.1, -2.6128403532605207440289176787628183753857716585684259215266759495623287574237999180247152944394404139231355121723643022381472695192886964110659528525581495530373774584577158447073439026981202767119354E-200 + 0.33418503285453096163511122756747816488781626903633125027780023496355065568246009880047274828327852110408223283692649171172445401765769090185123027250314135062052772481694230997190387163730966247762693*CC.1, -1.9922907693611470673220497300566490112316508896584247651640904115412756775356474374938454120100733156163908280314277804565872930084576310134377890500755890341910003120740083315893497258073167109928507E-199 + 1.3439146976010710640418383687939508978879047908803093759961368784486786426305589939822617899486158314661474375260762906999958108093277872527970490554018552960759715531393473799494021324896493531930139*CC.1]
]);

print "";
print "Check period matrix:";
print IsSmallPeriodMatrix(M);

